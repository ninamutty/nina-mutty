{"version":3,"sources":["themes.ts","context/ThemeContext.tsx","pages/Home/ExamplePoint.js","pages/Home/Blob.tsx","pages/Home/HomePage.tsx","App.tsx","index.js"],"names":["themes","camp","dark","darkCompliment","lightCompliment","light","blue","green","camel","red","ThemeContext","React","createContext","ExamplePoint","azimuth","center","radius","this","Math","PI","_components","x","cos","y","sin","acceleration","random","leftPoint","rightPoint","radialEffect","elasticity","speed","friction","value","_acceleration","_speed","_radialEffect","components","_elasticity","_friction","Blob","color","isRunning","DIVISIONAL","useState","document","documentElement","clientHeight","clientWidth","setRadius","setCenter","useEffect","requestId","timeoutResize","points","canvas","getElementById","getContext","resize","width","height","newRadius","timeout","rtime","Date","now","setTimeout","resizeend","window","addEventListener","setAttribute","oldMousePoint","hover","e","pos","diff","clientX","clientY","dist","sqrt","angle","vector","atan2","abs","nearestPoint","distanceFromPoint","forEach","point","strength","strengthValue","i","push","createPoints","drawBlob","ctx","clearRect","pointsArray","solveWith","NUM_POINTS","p0","position","p1","_p2","beginPath","moveTo","p2","xc","yc","quadraticCurveTo","fillStyle","fill","strokeStyle","requestAnimationFrame","cancelAnimationFrame","removeEventListener","mouseMove","size","className","id","style","backgroundColor","HomePage","setIsRunning","isLightMode","setIsLightMode","useLayoutEffect","matchMedia","matches","media","prefersLightMode","Consumer","border","onClick","App","theme","setTheme","keys","Object","key","floor","length","getRandomTheme","Provider","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.dbc1d845.chunk.js","sourcesContent":["export type Theme = {\n    [details: string]: string;\n};\n\nexport interface Themes {\n    [details: string]: Theme;\n}\n\nexport const themes: Themes = {\n    camp: {\n        dark: '#3F3727',\n        darkCompliment: '#594E36',\n        lightCompliment: '#EEF0F2',\n        light: '#DADDD8',\n    },\n    blue: {\n        dark: '#17283A',\n        darkCompliment: '#233D58',\n        lightCompliment: '#415a77',\n        light: '#778da9',\n    },\n    green: {\n        dark: '#5B6057',\n        darkCompliment: '#989E94',\n        lightCompliment: '#a5a58d',\n        light: '#b7b7a4',\n    },\n    camel: {\n        dark: '#A7998B',\n        darkCompliment: '#C2B8AE',\n        lightCompliment: '#A7998B',\n        light: '#C2B8AE',\n    },\n    red: {\n        dark: '#3B0D11',\n        darkCompliment: '#64161D',\n        lightCompliment: '#c9867f',\n        light: '#e9cac3',\n    },\n};\n","import React from 'react';\nimport { themes } from '../themes';\n\nconst ThemeContext = React.createContext(themes.camp);\n\nexport default ThemeContext;\n","class ExamplePoint {\n    constructor(azimuth, center, radius) {\n        this.center = center;\n        this.radius = radius;\n        this.azimuth = Math.PI - azimuth;\n        this._components = {\n            x: Math.cos(this.azimuth),\n            y: Math.sin(this.azimuth),\n        };\n\n        this.acceleration = -0.3 + Math.random() * 0.6;\n    }\n\n    solveWith(leftPoint, rightPoint) {\n        this.acceleration =\n            (-0.3 * this.radialEffect +\n                (leftPoint.radialEffect - this.radialEffect) +\n                (rightPoint.radialEffect - this.radialEffect)) *\n                this.elasticity -\n            this.speed * this.friction;\n    }\n\n    set acceleration(value) {\n        if (typeof value == 'number') {\n            this._acceleration = value;\n            this.speed += this._acceleration * 2;\n        }\n    }\n    get acceleration() {\n        return this._acceleration || 0;\n    }\n\n    set speed(value) {\n        if (typeof value == 'number') {\n            this._speed = value;\n            this.radialEffect += this._speed * 5;\n        }\n    }\n    get speed() {\n        return this._speed || 0;\n    }\n\n    set radialEffect(value) {\n        if (typeof value == 'number') {\n            this._radialEffect = value;\n        }\n    }\n    get radialEffect() {\n        return this._radialEffect || 0;\n    }\n\n    get position() {\n        return {\n            x:\n                this.center.x +\n                this.components.x * (this.radius + this.radialEffect),\n            y:\n                this.center.y +\n                this.components.y * (this.radius + this.radialEffect),\n        };\n    }\n\n    get components() {\n        return this._components;\n    }\n\n    set elasticity(value) {\n        if (typeof value === 'number') {\n            this._elasticity = value;\n        }\n    }\n    get elasticity() {\n        return this._elasticity || 0.001;\n    }\n    set friction(value) {\n        if (typeof value === 'number') {\n            this._friction = value;\n        }\n    }\n    get friction() {\n        return this._friction || 0.0085;\n    }\n}\nexport default ExamplePoint;\n","import React, { useEffect, useState, useLayoutEffect } from 'react';\nimport ExamplePoint from './ExamplePoint';\n\nexport type Center = {\n    x: number;\n    y: number;\n};\n\nconst Blob = ({\n    color,\n    isRunning,\n}: {\n    color: string;\n    isRunning: boolean;\n}): JSX.Element => {\n    const NUM_POINTS = 32;\n    const DIVISIONAL = (Math.PI * 2) / NUM_POINTS;\n\n    const [radius, setRadius] = useState(\n        document.documentElement.clientHeight >\n            document.documentElement.clientWidth\n            ? document.documentElement.clientWidth * 0.45\n            : document.documentElement.clientHeight * 0.45\n    );\n    const [center, setCenter] = useState({\n        x: document.documentElement.clientWidth / 2,\n        y: document.documentElement.clientHeight / 2,\n    });\n\n    useEffect(() => {\n        let requestId: number;\n        let mouseMove: () => void;\n        let timeoutResize: () => void;\n        const points: ExamplePoint[] = [];\n\n        const canvas = document.getElementById('blob') as HTMLCanvasElement;\n\n        if (canvas && canvas.getContext && center) {\n            // resize canvas to be full screen\n            const resize = function() {\n                canvas.width = document.documentElement.clientWidth;\n                canvas.height = document.documentElement.clientHeight;\n\n                if (\n                    center.x !== canvas.width / 2 ||\n                    center.y !== canvas.height / 2\n                ) {\n                    setCenter({\n                        x: canvas.width / 2,\n                        y: canvas.height / 2,\n                    });\n\n                    const newRadius =\n                        canvas.width > canvas.height\n                            ? canvas.height * 0.4\n                            : canvas.width * 0.4;\n                    setRadius(newRadius);\n                }\n            };\n\n            let timeout = false;\n            const delta = 200;\n\n            const resizeend = (rtime: number) => {\n                if (Date.now() - rtime < delta) {\n                    setTimeout(resizeend, delta);\n                } else {\n                    timeout = false;\n                    resize();\n                }\n            };\n\n            timeoutResize = () => {\n                const rtime = Date.now();\n                if (timeout === false) {\n                    timeout = true;\n                    setTimeout(() => resizeend(rtime), delta);\n                }\n            };\n            window.addEventListener('resize', timeoutResize);\n            // window.addEventListener('orientationchange', timeoutResize)\n            resize();\n\n            // create points to animate\n            const createPoints = () => {\n                for (let i = 0; i < NUM_POINTS; i++) {\n                    let point = new ExamplePoint(\n                        DIVISIONAL * (i + 1),\n                        center,\n                        radius\n                    );\n                    points.push(point);\n                }\n            };\n\n            // register the mouse enter events\n            canvas.setAttribute('touch-action', 'none');\n\n            let oldMousePoint = { x: 0, y: 0 };\n            let hover = false;\n\n            const mouseMove = (e: MouseEvent) => {\n                let pos = center;\n                let diff = { x: e.clientX - pos.x, y: e.clientY - pos.y };\n                let dist = Math.sqrt(diff.x * diff.x + diff.y * diff.y);\n                let angle = 0;\n\n                if (dist < radius && hover === false) {\n                    // we're inside the blob\n                    let vector = {\n                        x: e.clientX - pos.x,\n                        y: e.clientY - pos.y,\n                    };\n                    angle = Math.atan2(vector.y, vector.x);\n                    hover = true;\n                } else if (dist > radius && hover === true) {\n                    // we're outside the blob\n                    let vector = {\n                        x: e.clientX - pos.x,\n                        y: e.clientY - pos.y,\n                    };\n                    angle = Math.atan2(vector.y, vector.x);\n                    hover = false;\n                }\n\n                // figure out if we've cross the blob boundary, if we have animate points\n                if (Math.abs(angle) > 0) {\n                    let nearestPoint: ExamplePoint | undefined;\n                    let distanceFromPoint = 100;\n                    points.forEach(point => {\n                        if (\n                            Math.abs(angle - point.azimuth) < distanceFromPoint\n                        ) {\n                            nearestPoint = point;\n                            distanceFromPoint = Math.abs(angle - point.azimuth);\n                        }\n                    });\n\n                    if (nearestPoint) {\n                        const strength = {\n                            x: oldMousePoint.x - e.clientX,\n                            y: oldMousePoint.y - e.clientY,\n                        };\n                        let strengthValue =\n                            Math.sqrt(\n                                strength.x * strength.x +\n                                    strength.y * strength.y\n                            ) * 10;\n                        if (strengthValue > 100) strengthValue = 100;\n\n                        nearestPoint.acceleration =\n                            (strengthValue / 100) * (hover ? -1 : 1);\n                    }\n                }\n\n                oldMousePoint.x = e.clientX;\n                oldMousePoint.y = e.clientY;\n            };\n\n            const drawBlob = () => {\n                const ctx = canvas.getContext('2d');\n\n                if (!ctx) return;\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n                const pointsArray = points;\n                pointsArray[0].solveWith(\n                    pointsArray[NUM_POINTS - 1],\n                    pointsArray[1]\n                );\n                let p0 = pointsArray[NUM_POINTS - 1].position;\n                let p1 = pointsArray[0].position;\n                let _p2 = p1;\n\n                ctx.beginPath();\n                ctx.moveTo(center.x, center.y);\n                ctx.moveTo((p0.x + p1.x) / 2, (p0.y + p1.y) / 2);\n\n                // draw the points\n                for (let i = 1; i < NUM_POINTS; i++) {\n                    pointsArray[i].solveWith(\n                        pointsArray[i - 1],\n                        pointsArray[i + 1] || pointsArray[0]\n                    );\n\n                    let p2 = pointsArray[i].position;\n                    var xc = (p1.x + p2.x) / 2;\n                    var yc = (p1.y + p2.y) / 2;\n                    ctx.quadraticCurveTo(p1.x, p1.y, xc, yc);\n                    ctx.fillStyle = color;\n\n                    p1 = p2;\n                }\n\n                var xc = (p1.x + _p2.x) / 2;\n                var yc = (p1.y + _p2.y) / 2;\n                ctx.quadraticCurveTo(p1.x, p1.y, xc, yc);\n                ctx.fillStyle = color;\n                ctx.fill();\n                ctx.strokeStyle = color;\n\n                if (isRunning) {\n                    requestId = requestAnimationFrame(drawBlob);\n                }\n            };\n\n            window.addEventListener('pointermove', mouseMove);\n\n            createPoints();\n            drawBlob();\n        }\n        return () => {\n            cancelAnimationFrame(requestId);\n            window.removeEventListener('resize', timeoutResize);\n            window.removeEventListener('pointermove', mouseMove);\n        };\n    });\n\n    const size =\n        document.documentElement.clientHeight >\n        document.documentElement.clientWidth\n            ? document.documentElement.clientWidth\n            : document.documentElement.clientHeight;\n    return (\n        <canvas className=\"blob\" id=\"blob\" width={size} height={size}>\n            <div\n                className=\"canvas-fallBack\"\n                style={{\n                    backgroundColor: color,\n                }}\n            />\n        </canvas>\n    );\n};\n\nexport default Blob;\n","import React, { useState, useLayoutEffect } from 'react';\nimport Blob from './Blob';\nimport './HomePage.scss';\nimport ThemeContext from '../../context/ThemeContext';\n\nconst HomePage = (): JSX.Element => {\n    const [isRunning, setIsRunning] = useState(true);\n    const [isLightMode, setIsLightMode] = useState(true);\n\n    useLayoutEffect(() => {\n        const prefersReduecMotion = window.matchMedia(\n            '(prefers-reduced-motion: reduce)'\n        );\n        if (prefersReduecMotion.matches) {\n            setIsRunning(false);\n        }\n    }, []);\n\n    useLayoutEffect(() => {\n        if (window.matchMedia('(prefers-color-scheme)').media !== 'not all') {\n            const prefersLightMode = window.matchMedia(\n                '(prefers-color-scheme: light)'\n            );\n            setIsLightMode(prefersLightMode.matches ? true : false);\n        }\n    }, []);\n\n    return (\n        <ThemeContext.Consumer>\n            {value => (\n                <div className=\"page-container\">\n                    <button\n                        className=\"animation-toggle\"\n                        style={\n                            isLightMode\n                                ? {\n                                      border: `1px solid ${value.dark}`,\n                                      color: value.dark,\n                                  }\n                                : {\n                                      border: `1px solid ${value.light}`,\n                                      color: value.light,\n                                  }\n                        }\n                        onClick={() => setIsRunning(!isRunning)}\n                    >\n                        {isRunning ? 'Turn off Animation' : 'Turn on Animation'}\n                    </button>\n                    <Blob\n                        color={isLightMode ? value.dark : value.light}\n                        isRunning={isRunning}\n                    />\n                    <div className=\"text-container\">\n                        <h1 className=\"name\">Nina Mutty</h1>\n                        <h2 className=\"title\">Senior Software Engineer</h2>\n                    </div>\n                </div>\n            )}\n        </ThemeContext.Consumer>\n    );\n};\n\nexport default HomePage;\n","import React, { useState, useEffect } from 'react';\nimport ThemeContext from './context/ThemeContext';\nimport HomePage from './pages/Home/HomePage';\nimport { themes, Theme } from './themes';\nimport './App.css';\n\nconst App = (): JSX.Element => {\n    const [theme, setTheme] = useState(themes.camp);\n\n    const getRandomTheme = (): Theme => {\n        const keys = Object.keys(themes);\n        const randomElement = Math.floor(Math.random() * keys.length);\n        const key = keys[randomElement];\n        return themes[key];\n    };\n\n    useEffect(() => {\n        setTheme(getRandomTheme());\n    }, []);\n\n    return (\n        <ThemeContext.Provider value={theme}>\n            <div className=\"App\">\n                <HomePage />\n            </div>\n        </ThemeContext.Provider>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}